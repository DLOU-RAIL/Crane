<?xml version="1.0"?>
<robot name="crawler_crane" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <!-- Included material Files -->
  <xacro:include filename="$(find crawler_crane_description)/urdf/materials.xacro" />
  <xacro:include filename="$(find crawler_crane_description)/urdf/crawler_crane.gazebo.urdf.xacro" />

  <!-- LR1400-2 -->
  <xacro:property name="scale" value="0.1" />
  <xacro:property name="crawlerM" value="27700000" />
  <xacro:property name="crawlerL" value="10.385" />
  <xacro:property name="crawlerW" value="1.2" />
  <xacro:property name="crawlerH" value="1.6" />
  <xacro:property name="chassisM" value="17500" />
  <xacro:property name="chassisL" value="6.5" />
  <xacro:property name="chassisW" value="6.3" />
  <xacro:property name="chassisH" value="1.1" />
  <xacro:property name="chassisOffsetGround" value="0.5" />
  <xacro:property name="slewingRingM" value="500" />
  <xacro:property name="slewingRingR" value="1.5" />
  <xacro:property name="slewingRingH" value="0.5" />
  <xacro:property name="centerWeightM" value="8000" />
  <xacro:property name="centerWeightL" value="3.1" />
  <xacro:property name="centerWeightW" value="3.1" />
  <xacro:property name="centerWeightH" value="1.1" />
  <xacro:property name="superStructureM" value="33000" />      <!--33000-->
  <xacro:property name="superStructureL" value="9.0" />
  <xacro:property name="superStructureW" value="2.8" />
  <xacro:property name="superStructureH" value="1.8" />
  <xacro:property name="counterWeightM" value="67.500" />    <!--2*67500-->
  <xacro:property name="counterWeightL" value="2.495" />
  <xacro:property name="counterWeightW" value="1.6" />
  <xacro:property name="counterWeightH" value="3.1" />
  <xacro:property name="superStructureOffsetX" value="-3.0" />     <!--1/6-->
  <xacro:property name="jointSlewingZ" value="2.1" />
  <xacro:property name="jointLuffingX" value="1.5" />
  <xacro:property name="jointLuffingZ" value="2.59" />
  <xacro:property name="boomM" value="232.00" />              <!--23.2=2.9*(56/7)-->
  <xacro:property name="boomL" value="56.0" />
  <xacro:property name="boomW" value="2.8" />
  <xacro:property name="boomH" value="2.4" />
  <xacro:property name="jointRopeRotatingZ" value="-1.66" />
  <xacro:property name="hookBlockM" value="15.00" /> 
  <xacro:property name="hookBlockH" value="2.34" />                           <!-- L=1.0, W=2.4 -->
  <xacro:property name="hookM" value="1.000" /> 
  <xacro:property name="hookH" value="1.77" />

  <xacro:property name="effort" value="1000000000000000000000000000" />

  <property name="M_PI" value="3.1415926535897931" />


  <!-- Macro for inertia matrix -->
  <xacro:macro name="sphere_inertial_matrix" params="m r">
      <inertial>
          <mass value="${m}" />
          <inertia ixx="${2*m*r*r/5}" ixy="0" ixz="0"
              iyy="${2*m*r*r/5}" iyz="0" 
              izz="${2*m*r*r/5}" />
      </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertial_matrix" params="m r h">
      <inertial>
          <mass value="${m}" />
          <inertia ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
              iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
              izz="${m*r*r/2}" /> 
      </inertial>
  </xacro:macro>

  <xacro:macro name="box_inertial_matrix" params="m l w h">
      <inertial>
          <mass value="${m}" />
          <inertia ixx="${m*(h*h+l*l)/12}" ixy = "0" ixz = "0"
              iyy="${m*(w*w+l*l)/12}" iyz = "0"
              izz="${m*(w*w+h*h)/12}" /> 
      </inertial>
  </xacro:macro>

  <!-- Macro for wheel joint -->
  <xacro:macro name="wheel" params="lr translateY"> <!-- lr: left, right -->
      <link name="wheel_${lr}_link">
          <visual>
              <origin xyz="0 0 0" rpy="${M_PI/2} 0  0 " /> 
              <geometry>
                  <cylinder length="${0.1*crawlerW}" radius="${0.5*crawlerH}" />
              </geometry>
              <material name="Black" />
          </visual>
          <collision>
              <origin xyz="0 0 0" rpy="${M_PI/2} 0 0 " />
              <geometry>
                  <cylinder length="${0.1*crawlerW}" radius="${0.5*crawlerH}" />
              </geometry>
          </collision>
          <cylinder_inertial_matrix  m="${scale*crawlerM}" r="${0.5*crawlerH}" h="${crawlerW}" />          <!-- the crawlerM is placed on the wheels -->
      </link>
      <gazebo reference="wheel_${lr}_link">
          <material>Gazebo/Black</material>
      </gazebo>
      <joint name="chassis_to_wheel_${lr}_joint" type="continuous">
          <parent link="bottom_link"/>
          <child link="wheel_${lr}_link"/>
          <origin xyz="0 ${translateY * (0.5*chassisW+crawlerW)} -0.25" rpy="0 0 0" /> 
          <axis xyz="0 1 0" rpy="0 0 0" />
      </joint>
      <!-- Transmission is important to link the joints and the controller -->
      <transmission name="wheel_${lr}_joint_trans">
          <type>transmission_interface/SimpleTransmission</type>
          <joint name="chassis_to_wheel_${lr}_joint" />
          <actuator name="wheel_${lr}_joint_motor">
              <hardwareInterface>EffortJointInterface</hardwareInterface>
              <mechanicalReduction>1</mechanicalReduction>
          </actuator>
      </transmission>
  </xacro:macro>


  <!-- Macro for counterWeight joint -->
  <xacro:macro name="counterWeight" params="lr directY"> <!-- lr: left, right -->
      <link name="counterWeight_${lr}_link">
          <visual>
              <origin xyz="0 0 ${0.5*counterWeightH}" rpy="0 0  0" /> 
              <geometry>
                  <box size="${counterWeightL} ${counterWeightW} ${counterWeightH}" />
              </geometry>
              <material name="red" />
          </visual>
          <collision>
              <origin xyz="0 0 ${0.5*counterWeightH}" rpy="0 0 0" />
              <geometry>
                  <box size="${counterWeightL} ${counterWeightW} ${counterWeightH}" />
              </geometry>
          </collision>
          <box_inertial_matrix  m="${scale*counterWeightM}" l="${counterWeightL}" w="${counterWeightW}" h="${counterWeightH}"/>
      </link>

      <gazebo reference="counterWeight_${lr}_link">
          <material>Gazebo/Red</material>
      </gazebo>

      <joint name="superStructure_to_counterWeight_${lr}_joint" type="fixed">
          <parent link="superStructure_link"/>
          <child link="counterWeight_${lr}_link"/>
          <origin xyz="${-0.75*superStructureL} ${directY * (superStructureW+counterWeightW)/2} 0" rpy="0 0 0" /> 
      </joint>
  </xacro:macro>

  <xacro:macro name="rope_revolute" params="parent name mimic color *origin">
    <joint name="${name}_joint" type="revolute">
      <insert_block name="origin" />
      <axis xyz="0 -1 0" />
      <limit effort="${effort}" velocity="1.57"  lower="${-M_PI}" upper="${M_PI}" />
      <mimic joint="${mimic}" multiplier="-1.0" offset="0" />
      <parent link="${parent}" />
      <child link="${name}_link" />
    </joint>

    <link name="${name}_link" >
      <box_inertial_matrix  m="${scale*100*hookBlockM}" l="0.1" w="0.1" h="50"/>    <!--hookBlock Mass is placed here -->
      <visual>
          <origin xyz="0 0 -2.5" rpy="0 0 0" />
          <geometry>
              <box size="0.1 0.1 5" />
          </geometry>
      </visual>
    </link>
  </xacro:macro>

  <xacro:macro name="rope_prismatic" params="parent name vlimit llimit ulimit size color *origin mesh_name mass">
    <joint name="${name}_joint" type="prismatic">
      <insert_block name="origin" />
      <axis xyz="0 0 -1" />
      <limit effort="${effort}" velocity="${vlimit}"  lower="${llimit}" upper="${ulimit}" />
      <parent link="${parent}" />
      <child link="${name}_link" />
    </joint>
    <link name="${name}_link" >
      <box_inertial_matrix  m="${scale*mass}" w="${size}" h="${size}" l="${size}" />

      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <!--<box size="${size} ${size} ${size}" />-->
          <mesh filename="package://crawler_crane_description/meshes/${mesh_name}" />
        </geometry>
        <material name="${color}"/>
      </visual>
      <collision>
        <origin xyz="0 0 ${0.5*size}" rpy="0 0 0" />
        <geometry>
          <box size="${0.33*size} ${size} ${size}" />
        </geometry>
      </collision>
    </link>
  </xacro:macro>

  <xacro:macro name="Z_revolute" params="parent name vlimit llimit ulimit size_x size_y size_z col_offset_x color *origin mesh_name mass">
    <joint name="${name}_joint" type="revolute">
      <insert_block name="origin" />
      <axis xyz="0 0 1" />
      <limit effort="${effort}" velocity="${vlimit}" lower="${llimit}" upper="${ulimit}" />
      <parent link="${parent}" />
      <child link="${name}_link" />
    </joint>

    <link name="${name}_link" >
      <box_inertial_matrix  m="${scale*mass}" w="${size_y}" h="${size_z}" l="${size_x}" />

      <visual>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <mesh filename="package://crawler_crane_description/meshes/${mesh_name}" />
        </geometry>
        <material name="${color}"/>
      </visual>
      <collision>
        <origin xyz="${col_offset_x} 0 ${0.5*size_z}" rpy="0 0 0" />
        <geometry>
          <box size="${size_x} ${size_y} ${size_z}" />
        </geometry>
      </collision>
    </link>
  </xacro:macro>

  <xacro:macro name="planar_joint_to_xytheta" params="child_link">
     <link name="base_link">
      <visual>
        <geometry>
          <sphere radius="0.0"/>
        </geometry>
        <material name="blue">
          <color rgba="0.0 0.0 0.8 1.0"/>
        </material>
      </visual>
     </link>
    
     <link name="base_x_link">
      <visual>
        <geometry>
          <sphere radius="0.0"/>
        </geometry>
        <material name="blue">
          <color rgba="0.0 0.0 0.8 1.0"/>
        </material>
      </visual>
    </link>
    
    <joint name="base_x_joint" type="prismatic">
      <parent link="base_link"/>
      <child link="base_x_link"/>
      <limit effort="1000.0" lower="-200.0" upper="200.0" velocity="0.5"/> 
      <axis xyz="1 0 0"/>
	  <!-- <origin rpy="0 1.57075 0" xyz="0 0 0"/> -->
    </joint>
    
    <link name="base_y_link">
      <visual>
        <geometry>
          <sphere radius="0.0"/>
        </geometry>
        <material name="blue">
          <color rgba="0.0 0.0 0.8 1.0"/>
        </material>
      </visual>
    </link>
  
  
    <joint name="base_y_joint" type="prismatic">
      <parent link="base_x_link"/>
      <child link="base_y_link"/>
      <axis xyz="0 1 0"/>
      <limit effort="1000.0" lower="-200.0" upper="200.0" velocity="0.5"/> 
      <!-- <origin rpy="-1.57075 0 0" xyz="0 0 0"/> -->
    </joint>

    <link name="platform_link">
     <visual>
       <geometry>
         <sphere radius="0.0"/>
       </geometry>
       <material name="blue">
         <color rgba="0.0 0.0 0.8 1.0"/>
       </material>
     </visual>
    </link>
  
    <joint name="platform_joint" type="fixed">
      <parent link="base_y_link"/>
      <child link="platform_link"/>
      <limit effort="1000.0" lower="-10.0" upper="10.0" velocity="0.5"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </joint>
  
    <link name="base_theta_link">
      <visual>
        <geometry>
          <sphere radius="0.0"/>
        </geometry>
        <material name="blue">
          <color rgba="0.0 0.0 0.8 1.0"/>
        </material>
      </visual>
    </link>
  
    <joint name="base_theta_joint" type="continuous">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <parent link="platform_link"/>
      <child link="base_theta_link"/>
      <axis xyz="0 0 1"/>
    </joint>

    <joint name="base_fix_joint" type="fixed">
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <parent link="base_theta_link"/>
      <child link="${child_link}"/>
    </joint>
  </xacro:macro>


  <!--===============================================================================================-->

  <planar_joint_to_xytheta child_link = "base_footprint"/>

  <!-- BASE-FOOTPRINT -->
  <!-- base_footprint is a fictitious link(frame) that is on the ground right below base_link origin -->
  <link name="base_footprint">
      <inertial>
          <mass value="0.0001" />
          <origin xyz="0 0 0" />
          <inertia ixx="0.0001" ixy="0.0" ixz="0.0"
              iyy="0.0001" iyz="0.0" 
              izz="0.0001" />
      </inertial>
      <visual>
          <origin xyz="0 0 0" rpy="0 0 0" />
          <geometry>
              <box size="0.001 0.001 0.001" />
          </geometry>
      </visual>
  </link>
  <gazebo reference="base_footprint">
      <material>Gazebo/Blue</material>
  </gazebo>

  <joint name="base_footprint_joint" type="fixed">
      <origin xyz="0 0 ${0.5*chassisH+chassisOffsetGround}" rpy="0 0 0" />
      <parent link="base_footprint"/>
      <child link="bottom_link" />
  </joint>

  <!-- BOTTOM-->
  <link name="bottom_link">
      <box_inertial_matrix  m="${scale*chassisM}" l="${chassisL}" w="${chassisW}" h="${chassisH}" />    <!-- the crawlerM is placed on the wheels -->
      <visual>
          <origin xyz="0 0 0" rpy="0 0 0" />
          <geometry>
              <box size="${chassisL} ${chassisW} ${chassisH}"/>
          </geometry>
          <material name="White" />
      </visual>  
      <collision>
          <origin xyz="0 0 0" rpy="0 0 0 " />
          <geometry>
              <box size="${chassisL} ${chassisW} ${chassisH}"/>
          </geometry>
      </collision>  
      <!-- L-crawler -->
      <visual>
          <origin xyz="0 ${(chassisW+crawlerW)/2} ${-0.5*chassisOffsetGround}" rpy="0 0 0" />  
          <geometry>
              <box size="${crawlerL} ${crawlerW} ${crawlerH}" />
          </geometry>
          <material name="red" />
      </visual>
      <collision>
          <origin xyz="0 ${(chassisW+crawlerW)/2} ${-0.5*chassisOffsetGround}" rpy="0 0 0" /> 
          <geometry>
              <box size="${crawlerL} ${crawlerW} ${crawlerH}" />
          </geometry>
      </collision>
      <!-- R-crawler -->
      <visual>
          <origin xyz="0 ${-1*(chassisW+crawlerW)/2} ${-0.5*chassisOffsetGround}" rpy="0 0 0" /> 
          <geometry>
              <box size="${crawlerL} ${crawlerW} ${crawlerH}" />
          </geometry>
          <material name="red" />
      </visual>
      <collision>
          <origin xyz="0 ${-1*(chassisW+crawlerW)/2} ${-0.5*chassisOffsetGround}" rpy="0 0 0" /> 
          <geometry>
              <box size="${crawlerL} ${crawlerW} ${crawlerH}" />
          </geometry>
      </collision>
      <!-- slewingRing -->
      <visual>
          <origin xyz="0 0 ${0.5*chassisH+0.5*slewingRingH}" rpy="0 0 0" />
          <geometry>
              <cylinder length="${slewingRingH}" radius="${slewingRingR}" />
          </geometry>
          <material name="White" />
      </visual>  
      <collision>
          <origin xyz="0 0 ${0.5*chassisH+0.5*slewingRingH}" rpy="0 0 0" />
          <geometry>
              <cylinder length="${slewingRingH}" radius="${slewingRingR}" />
          </geometry>
      </collision> 
  </link>
  <!-- Wheel Definitions -->
  <wheel lr="right"  translateY="1" />
  <wheel lr="left"  translateY="-1" />


  <!-- superStructure Definitions -->
  <joint name="superStructure_joint" type="continuous">
      <origin xyz="0 0 ${0.5*chassisH+slewingRingH}" rpy="0 0 0" />             <!-- on the top of slewingRing -->
      <axis xyz="0 0 1" rpy="0 0 0" />
      <limit effort="${effort}" velocity="${M_PI / 2.0}"/>
      <parent link="bottom_link"/>
      <child link="superStructure_link" />
  </joint>
  <link name="superStructure_link">
      <box_inertial_matrix  m="${scale*superStructureM}" l="${superStructureL}" w="${superStructureW}" h="${superStructureH}" />
      <visual>
          <origin xyz="${superStructureOffsetX} 0 ${0.5*superStructureH}" rpy="0 0 0" />
          <geometry>
              <box size="${superStructureL} ${superStructureW} ${superStructureH}"/>
          </geometry>
          <material name="White" />
      </visual>  
      <collision>
          <origin xyz="${superStructureOffsetX} 0 ${0.5*superStructureH}" rpy="0 0 0 " />
          <geometry>
              <box size="${superStructureL} ${superStructureW} ${superStructureH}"/>
          </geometry>
      </collision>     
  </link>
  <!-- counterWeight Definitions -->
  <counterWeight lr="right"  directY="1" />
  <counterWeight lr="left"  directY="-1" />

  <!-- luffing: boom joint -->
  <joint name="boom_joint" type="revolute">
      <origin xyz="${jointLuffingX} 0 ${jointLuffingZ-crawlerH-slewingRingH}" rpy="0 0 0" />
      <axis xyz="0 -1 0" />
      <limit effort="${effort}" velocity="1.57" lower="0.6" upper="${0.5*M_PI}" />
      <parent link="superStructure_link" />
      <child link="boom_link" />
  </joint>
  <link name="boom_link" >
      <box_inertial_matrix  m="${boomM}" w="${boomW}" h="${boomH}" l="${boomL}" />
      <visual>
        <plugin name="some_visual_plugin" filename="libsome_visual_plugin.so"/>
        <origin xyz="0 0 0" rpy="0 0 0" />
        <geometry>
          <!--<box size="${boomL} ${boomW} ${boomH}" />-->
          <mesh filename="package://crawler_crane_description/meshes/boom.dae" />
        </geometry>
        <material name="red"/>
      </visual>
      <collision>
        <origin xyz="${0.5*boomL} 0 0" rpy="0 0 0" />
        <geometry>
          <box size="${boomL} ${boomW} ${boomH}" />
        </geometry>
      </collision>
  </link>

  <!-- maintain rope erect: rope joint -->
  <rope_revolute parent="boom_link" name="rope" mimic="boom_joint" color="green">
      <origin xyz="${boomL} 0 ${jointRopeRotatingZ}" rpy="0 0 0"/>
  </rope_revolute>

  <!-- lifting: hook_block joint -->
  <rope_prismatic parent="rope_link" name="hook_block" vlimit="2.0" llimit="0" ulimit="${1.5*boomL}" size="${hookBlockH}" color="red"  mesh_name="hookblock.dae" mass="${0.02*hookBlockM}">
      <origin xyz="0 0 0" rpy="0 0 0"/>
  </rope_prismatic>

  <!-- hook rotating: hook joint -->
  <Z_revolute parent="hook_block_link" name="hook" vlimit="1.57" llimit="${-M_PI}" ulimit="${M_PI}" size_x="${hookH}" size_y="2" size_z="${hookH}" col_offset_x="0" color="red"  mesh_name="hook.dae" mass="${0.01*hookM}">
      <origin xyz="0 0 ${-hookBlockH-hookH}" rpy="0 0 0" />
  </Z_revolute>

  <upper_transmission />
  <crane_control_plugins />
  <laser_plugins parent="superStructure_link" x="${0.5*superStructureL}" y="${0.6*superStructureW}" z="${5*superStructureH}" />

</robot>

